#!/usr/local/bin/perl -w

# Copyright (c) 2010, Yahoo! Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use common::sense;

use Getopt::Long qw(:config bundling);
use Pod::Usage qw(pod2usage);
use Sys::Hostname qw(hostname);
use YAML::XS qw(LoadFile);
use Log::Log4perl qw(:easy);

use Data::Dumper qw/Dumper/;

our $VERSION = '4.0';

sub main
{
  $ENV{PATH} = qq{/usr/local/libexec/pogo:/usr/local/bin:/bin:/sbin:/usr/bin:/usr/sbin};

  my $gotopts = {
    output_uri => 'http://' . hostname() . '/pogo_output/',
    configfile => '/usr/local/etc/pogo/worker.conf',
  };

  GetOptions(
    $gotopts,
    'configfile|f=s',
    'data_dir|data-dir=s',
    'dispatcher_cert|dispatcher-cert=s',
    'dispatchers|s=s@' => sub { push @{ $gotopts->{dispatchers} }, split /\s*,\s*/, $_[1] },
    'exec_helper|exec-helper=s',
    'h|help' => sub { pod2usage(); exit 0; },
    'log4perl|logger-config=s',
    'num_workers|workers=i',
    'output_uri|output-uri=s',
    'pid_file|pid-file=s',
    'worker_cert|ssl-cert=s',
    'worker_key|ssl-key=s',
    'debug' => sub { $gotopts->{loglevel} = 'DEBUG'; Log::Log4perl::get_logger->level('DEBUG'); },
  );

  my $opts;
  if ( $gotopts->{configfile} )
  {
    eval { $opts = LoadFile( $gotopts->{configfile} ) };
    if ($@)
    {
      LOGDIE "Error: $@";
    }

    # merge command-line options over configfile
    while ( my ( $k, $v ) = each %$gotopts )
    {
      $opts->{$k} = $v;
    }
  }

  # init logger
  if ( defined $opts->{log4perl} && -r $opts->{log4perl} )
  {
    Log::Log4perl::init( $opts->{log4perl} );
  }
  if ( defined $opts->{loglevel} )
  {
    Log::Log4perl::get_logger->level( $opts->{loglevel} );
  }

  print Dumper $opts;
}

exit main();

1;

=pod

=head1 NAME

  CLASSNAME - SHORT DESCRIPTION

=head1 SYNOPSIS

CODE GOES HERE

=head1 DESCRIPTION

LONG_DESCRIPTION

=head1 METHODS

B<methodexample>

=over 2

methoddescription

=back

=head1 SEE ALSO

L<Pogo::Dispatcher>

=head1 COPYRIGHT

Apache 2.0

=head1 AUTHORS

  Andrew Sloane <asloane@yahoo-inc.com>
  Michael Fischer <mfischer@yahoo-inc.com>
  Nicholas Harteau <nrh@yahoo-inc.com>
  Nick Purvis <nep@yahoo-inc.com>
  Robert Phan <rphan@yahoo-inc.com>

=cut
